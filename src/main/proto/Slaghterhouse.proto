syntax = "proto3";
option java_multiple_files = true;
import "google/protobuf/timestamp.proto";


package org.example;

message RegisterAnimalRequest {
  int32 regNum = 1;
  string animalType = 2;
  google.protobuf.Timestamp dateOfBirth = 3;
  double weight = 4;
}

message AnimalIdRequest {
  int32 animalId = 1;
}

message DateRequest {
  int32 day = 1;
  int32 month = 2;
  int32 year = 3;
}

message AnimalResponse {
  int32 regNum = 1;
  string animalType = 2;
  google.protobuf.Timestamp dateTime = 3;
  double weight = 4;
}

message ProductIdRequest {
  int32 productId = 1;
}

message ProductResponse {
  int32 productId = 1;
  string productName = 2;
  string productType= 3;
}

message AnimalListResponse {
  repeated AnimalResponse animals = 1;
}

message ProductListResponse {
  repeated ProductResponse products = 1;
}
service AnimalService {
  rpc createAnimal(RegisterAnimalRequest) returns (AnimalResponse);
  rpc getAnimalById(AnimalIdRequest) returns (AnimalResponse);
  rpc getAnimalsByDate(DateRequest) returns (AnimalListResponse);
  rpc getAnimalsByType(AnimalIdRequest) returns (AnimalListResponse);
  rpc getAnimalsByWeight(AnimalIdRequest) returns (AnimalListResponse);
  rpc getAllAnimals(AnimalIdRequest) returns (AnimalListResponse);
  rpc updateAnimal(AnimalResponse) returns (AnimalResponse);
  rpc deleteAnimal(AnimalIdRequest) returns (AnimalResponse);
}

service ProductService {
  rpc getProductsIncludingAnimalRegId(AnimalIdRequest) returns (ProductListResponse);
  rpc getProductById(ProductIdRequest) returns (ProductResponse);
  rpc getAllProducts(ProductIdRequest) returns (ProductListResponse);
  rpc createProduct(ProductResponse) returns (ProductResponse);
  rpc updateProduct(ProductResponse) returns (ProductResponse);
  rpc deleteProduct(ProductIdRequest) returns (ProductResponse);
}

service SlaughterService {
  rpc slaughterAnimal(AnimalIdRequest) returns (AnimalResponse);
}

